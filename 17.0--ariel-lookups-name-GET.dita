<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--ariel-lookups-name-GET" xml:lang="en-us">
<title>GET /ariel/lookups/{name}</title>
<shortdesc>Retrieves a tagged field lookup by name.</shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/ariel/lookups/{name}</apiname>
<keyword>GET</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn>
<p>Retrieves a tagged field lookup by name</p>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /ariel/lookups/{name} resource details</title>
<desc><p outputclass="summary">GET /ariel/lookups/{name} resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /ariel/lookups/{name} request parameter details</title>
<desc><p outputclass="summary">GET /ariel/lookups/{name} request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>name</p></entry>
<entry colname="col2"><p>path</p></entry>
<entry colname="col3"><p>Required</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>The name of lookup entry to be retrieved.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>query</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /ariel/lookups/{name} response codes</title>
<desc><p outputclass="summary">GET /ariel/lookups/{name} response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>The lookup was retrieved.</p></entry>
</row>
<row>
<entry colname="col1"><p>404</p></entry>
<entry colname="col2"><p>1002</p></entry>
<entry colname="col3"><p>Lookup with this name does not exist</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1020</p></entry>
<entry colname="col3"><p>Internal server error</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>The lookup associated with particular name.</p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
{
    "default_value": "String",
    "map": {
        "String": "String"
    },
    "name": "String",
    "type": "String &lt;one of: NULL, STRUCT, Byte, Short, Integer, Long, UnsignedByte, UnsignedShort, UnsignedInt, UnsignedLong, BigInteger, Double, Float, Port, Host, HostV4V6, HostV6, MACAddress, String, ByteArray, UnsignedIntHex, Boolean, Binary&gt;"
}
</codeblock>
</refsyn>
</refbody>
</reference>