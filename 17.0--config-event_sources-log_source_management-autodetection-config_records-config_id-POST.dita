<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--config-event_sources-log_source_management-autodetection-config_records-config_id-POST" xml:lang="en-us">
<title>POST /config/event_sources/log_source_management/autodetection/config_records/{config_id}</title>
<shortdesc>Updates an Autodetection Config Record.</shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/config/event_sources/log_source_management/autodetection/config_records/{config_id}</apiname>
<keyword>POST</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn>
<p>Updates an Autodetection Config Record.</p>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} resource details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} request parameter details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>config_id</p></entry>
<entry colname="col2"><p>path</p></entry>
<entry colname="col3"><p>Required</p></entry>
<entry colname="col4"><p>Number (Integer)</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Required. The ID of the Autodetection Config Record to update.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>header</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} request body details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} request body details</p></desc>
<tgroup cols="5">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="2*" />
<colspec colname="col5" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Data Type</entry>
<entry colname="col3">MIME Type</entry>
<entry colname="col4">Description</entry>
<entry colname="col5">Sample</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>config_record</p></entry>
<entry colname="col2"><p>Object</p></entry>
<entry colname="col3"><p>application/json</p></entry>
<entry colname="col4"><p>Required. A single Autodetection Config Record object has the following modifiable fields:
  <ul>
  <li><b>enabled</b> - Boolean - If the associated log source type is enabled for autodetection, the condition is set to 'true'; otherwise, the condition is set to 'false'.</li>
  <li><b>precedence</b> - Number - When an event is received from an unknown source, each log source type that is eligible for autodetection attempts to parse the event in ascending order of precedence. Lower values are attempted before greater values.</li>
  <li><b>minimum_successful_events</b> - Number - The minimum number of events  collected from a source that must be successfully parsed by the associated log source type for autodetection to occur.</li>
  <li><b>minimum_success_rate</b> - Number - The minimum parsing success rate for events from a source that the associated log source type must have for autodetection to occur. Expressed as (number of events successfully parsed) / (number of events attempted) * 100.</li>
  <li><b>maximum_events_for_abandon</b> - Number - The maximum number of events from a source that the associated log source type attempts to parse before it abandons tracking of that source. Note: If the conditions for autodetection (minimum_successful_events and minimum_success_rate) are met before this number of events are received, autodetection has already occurred and the log source type stopped tracking the source at that time.</li>
  <li><b>consecutive_failures_for_abandon</b> - Number - The number of consecutive events from a source that the associated log source type failed to parse which causes the log source type to abandon tracking the source.</li>
  <li><b>log_source_name_template</b> - String - The template that is used to set the name of autodetected log sources for the associated log source type. Two placeholder values can be used. These values are replaced by real values when the template is used for the creation of autodetected log sources. $$DEVICE_TYPE$$ is replaced with the log source type name. $$SOURCE_ADDRESS$$ is replaced with the log source's Log Source Identifier value. The default log_source_name_template is '$$DEVICE_TYPE$$ @ $$SOURCE_ADDRESS$$'.</li>
  <li><b>log_source_description_template</b> - String - The template that is used to set the description of autodetected log sources for the associated log source type. Two placeholder values can be used. These values are replaced by real values when the template is used for the creation of autodetected log sources. $$DEVICE_TYPE$$ is replaced with the log source type name. $$SOURCE_ADDRESS$$ is replaced with the log source's Log Source Identifier value. The default log_source_description_template is '$$DEVICE_TYPE$$ device'.</li>
  </ul>
  Any other set fields will be ignored.</p></entry>
<entry colname="col5"><p>{
    "consecutive_failures_for_abandon": 42,
    "custom": true,
    "enabled": true,
    "id": 42,
    "log_source_description_template": "String",
    "log_source_name_template": "String",
    "log_source_type_id": 42,
    "maximum_events_for_abandon": 42,
    "minimum_success_rate": 42,
    "minimum_successful_events": 42,
    "precedence": 42
}</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} response codes</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/autodetection/config_records/{config_id} response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>The Autodetection Config Record was updated.</p></entry>
</row>
<row>
<entry colname="col1"><p>404</p></entry>
<entry colname="col2"><p>1000</p></entry>
<entry colname="col3"><p>The Autodetection Config Record does not exist.</p></entry>
</row>
<row>
<entry colname="col1"><p>409</p></entry>
<entry colname="col2"><p>1001</p></entry>
<entry colname="col3"><p>The 'precedence' parameter value must be unique.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1002</p></entry>
<entry colname="col3"><p>The valid range for the 'precedence' parameter value is 1 to 10000.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1003</p></entry>
<entry colname="col3"><p>The valid range for the 'minimum_successful_events' parameter value is 1 to 1000.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1004</p></entry>
<entry colname="col3"><p>The valid range for the 'minimum_success_rate' parameter value is 1 to 100.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1005</p></entry>
<entry colname="col3"><p>The 'maximum_events_for_abandon' parameter must be a value greater than 'minimum_successful_events' and no greater than 100000.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1006</p></entry>
<entry colname="col3"><p>The valid range for the 'consecutive_failures_for_abandon' parameter value is 1 to 1000.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1007</p></entry>
<entry colname="col3"><p>The 'log_source_name_template' parameter value is 10 to 255 characters.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1008</p></entry>
<entry colname="col3"><p>The 'log_source_description_template' parameter value must not exceed 255 characters.</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1020</p></entry>
<entry colname="col3"><p>An error occurred during the attempt to update the Autodetection Config Record.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>The updated Autodetection Config Record containing the following fields:
  <ul>
   <li><b>id</b> - Number - The ID of the Autodetection Config Record.</li> 
  <li><b>log_source_type_id</b> - Number - The ID of the Log Source Type that corresponds with the Autodetection Config Record. See the Log Source Type API (/api/config/event_sources/log_source_management/log_source_types/).</li>
  <li><b>enabled</b> - Boolean - If the associated log source type is enabled for autodetection, the condition is set to 'true'; otherwise, the condition is set to 'false'.</li>
  <li><b>precedence</b> - Number - When an event is received from an unknown source, each log source type that is eligible for autodetection attempts to parse the event in ascending order of precedence. Lower values are attempted before greater values.</li>
  <li><b>minimum_successful_events</b> - Number - The minimum number of events  collected from a source that must be successfully parsed by the associated log source type for autodetection to occur.</li>
  <li><b>minimum_success_rate</b> - Number - The minimum parsing success rate for events from a source that the associated log source type must have for autodetection to occur. Expressed as (number of events successfully parsed) / (number of events attempted) * 100.</li>
  <li><b>maximum_events_for_abandon</b> - Number - The maximum number of events from a source that the associated log source type attempts to parse before it abandons tracking of that source. Note: If the conditions for autodetection (minimum_successful_events and minimum_success_rate) are met before this number of events are received, autodetection has already occurred and the log source type stopped tracking the source at that time.</li>
  <li><b>consecutive_failures_for_abandon</b> - Number - The number of consecutive events from a source that the associated log source type failed to parse which causes the log source type to abandon tracking the source.</li>
  <li><b>log_source_name_template</b> - String - The template that is used to set the name of autodetected log sources for the associated log source type. Two placeholder values can be used. These values are replaced by real values when the template is used for the creation of autodetected log sources. $$DEVICE_TYPE$$ is replaced with the log source type name. $$SOURCE_ADDRESS$$ is replaced with the log source's Log Source Identifier value. The default log_source_name_template is '$$DEVICE_TYPE$$ @ $$SOURCE_ADDRESS$$'.</li>
  <li><b>log_source_description_template</b> - String - The template that is used to set the description of autodetected log sources for the associated log source type. Two placeholder values can be used. These values are replaced by real values when the template is used for the creation of autodetected log sources. $$DEVICE_TYPE$$ is replaced with the log source type name. $$SOURCE_ADDRESS$$ is replaced with the log source's Log Source Identifier value. The default log_source_description_template is '$$DEVICE_TYPE$$ device'.</li>
  </ul></p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
{
    "consecutive_failures_for_abandon": 42,
    "custom": true,
    "enabled": true,
    "id": 42,
    "log_source_description_template": "String",
    "log_source_name_template": "String",
    "log_source_type_id": 42,
    "maximum_events_for_abandon": 42,
    "minimum_success_rate": 42,
    "minimum_successful_events": 42,
    "precedence": 42
}
</codeblock>
</refsyn>
</refbody>
</reference>