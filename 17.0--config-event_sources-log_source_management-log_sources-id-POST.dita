<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--config-event_sources-log_source_management-log_sources-id-POST" xml:lang="en-us">
<title>POST /config/event_sources/log_source_management/log_sources/{id}</title>
<shortdesc>Updates a log source by ID. A log source contains the following fields: </shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/config/event_sources/log_source_management/log_sources/{id}</apiname>
<keyword>POST</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn><ul>
<li><b>id</b> - Number - The ID of the log source.</li>
<li><b>name</b> - String - The unique name of the log source.</li>
<li><b>description</b> - String - An optional description of the log source.</li>
<li><b>type_id</b> - Number - The type of the log source. Must correspond to an existing log source
type. See the Log Source Type API
(/api/config/event_sources/log_source_management/log_source_types/).</li>
<li><b>protocol_type_id</b> - Number - The type of protocol that is used by the log source. Must
correspond to an existing protocol type. See the Protocol Type API
(/api/config/event_sources/log_source_management/protocol_types/). Individual log source types can
support only a subset of all available protocol types, as indicated by the protocol_types field of
the log source type structure.</li>
<li><b>protocol_parameters</b> - Array - The set of protocol parameters. This set is a collection of
ProtocolParameter structures. The structure of the parameters is defined by the protocol type that
is used by the log source. See the Protocol Type API
(/api/config/event_sources/log_source_management/protocol_types/).</li>
<li><b>enabled</b> - Boolean - If the log source is enabled, the condition is set to 'true';
otherwise, the condition is set to 'false'.</li>
<li><b>gateway</b> - Boolean - If the log source is configured as a gateway, the condition is set to
'true'; otherwise, the condition is set to 'false'. A gateway log source is a stand-alone protocol
configuration. The log source receives no events itself, and serves as a host for a protocol
configuration that retrieves event data to feed other log sources. It acts as a "gateway" for events
from multiple systems to enter the event pipeline.</li>
<li><b>internal</b> - Boolean - If the log source is internal (when the log source type is defined
as internal), the condition is set to 'true'.</li>
<li><b>credibility</b> - Short - On a scale of 0 - 10 inclusive, the amount of credibility that the
QRadar administrator places on this log source.</li>
<li><b>target_event_collector_id</b> - Number - The ID of the event collector where the log source
sends its data. The ID must correspond to an existing event collector. See the Event Collector API
(/api/config/event_sources/event_collectors/).</li>
<li><b>disconnected_log_collector_id</b> - Number - The ID of the disconnected log collector where
this log source will run. The ID must correspond to an existing disconnected log collector. See the
Disconnected Log Collector API (/api/config/event_sources/disconnected_log_collectors/).</li>
<li><b>coalesce_events</b> - Boolean - If events collected by this log source are coalesced based on
common properties, the condition is set to 'true'. If each individual event is stored, then the
condition is set to 'false'.</li>
<li><b>store_event_payload</b> - Boolean - If the payloads of events that are collected by this log
source are stored, the condition is set to 'true'. If only the normalized event records are stored,
then the condition is set to 'false'.</li>
<li><b>log_source_extension_id</b> - Long - The log source extension associated with the log source.
The ID must correspond to an existing log source extension or be set to 'null'. See the Log Source
Extension API (/api/config/event_sources/log_source_management/log_source_extensions/)</li>
<li><b>language_id</b> - Integer - The language of the events that are being processed by this log
source. Must correspond to an existing log source language. See the Log Source Language API
(/api/config/event_sources/log_source_management/log_source_languages/). Individual log source types
can support only a subset of all available log source languages, as indicated by the
supported_language_ids field of the log source type structure</li>
<li><b>group_ids</b> - Array - The set of log source group IDs this log source is a member of. Each
ID must correspond to an existing log source group. See the Log Source Group API
(/api/config/event_sources/log_source_management/log_source_groups/).</li>
<li><b>requires_deploy</b> Boolean - Set to 'true' if you need to deploy changes to enable the log
source for use; otherwise, set to 'false' if the log source is already active.</li>
<li><b>status</b> - Object - The status of the log source.</li>
<li><b>auto_discovered</b> - Boolean - If the log source was auto-discovered, the condition is set
to 'true'. If the log source was created by a user, then the condition is set to 'false'.</li>
<li><b>average_eps</b> - Number - The average events per second (EPS) rate of the log source over
the last 60 seconds.</li>
<li><b>creation_date</b> - Number - The creation date/time of the log source (in milliseconds since
epoch).</li>
<li><b>modified_date</b> - Number - The last modified date/time of the log source (in milliseconds
since epoch).</li>
<li><b>last_event_time</b> - Number - The date/time of the last event received by the log source (in
milliseconds since epoch).</li>
<li><b>wincollect_internal_destination_id</b> - Long - The internal WinCollect destination for this
log source, if applicable. Log sources without an associated WinCollect agent have a null value.
Must correspond to an existing WinCollect destination. See the WinCollect Destination API
(/api/config/event_sources/wincollect/wincollect_destinations/).</li>
<li><b>wincollect_external_destination_ids</b> - Array&lt;Long> - The set of external WinCollect
destinations for this log source, if applicable. Log Sources without an associated WinCollect agent
have a null value. Each ID must correspond to an existing WinCollect destination. See the WinCollect
Destination API (/api/config/event_sources/wincollect/wincollect_destinations/).</li>
<li><b>legacy_bulk_group_name</b> - Array&lt;Long> - The name of the legacy bulk group that this log
source belongs to. If the field is null, then the log source is not part of any legacy bulk
groups.</li>
<li><b>sending_ip</b> - String - The ip of the system which the log source is associated to, or fed
by.</li>
<li><b>parsing_order</b> - Integer - The order in which log sources will parse if multiple exists
with a common identifier.</li>
</ul> A protocol parameter contains the following fields: <ul>
<li><b>id</b> - Number - The ID of the protocol parameter. The ID matches one of the
ProtocolParameterType objects defined by the Protocol Type used by the log source. See the Protocol
Type API (/api/config/event_sources/log_source_management/protocol_types/).</li>
<li><b>name</b> - The name of the protocol parameter. The name matches one of the
ProtocolParameterType objects defined by the Protocol Type used by the log source. See the Protocol
Type API (/api/config/event_sources/log_source_management/protocol_types/).</li>
<li><b>value</b> - String - The value of the parameter.</li>
</ul> A status parameter contains the following fields: <ul>
<li><b>status</b> - Enumeration - The status of the log source. Possible values are N/A, SUCCESS,
WARN, ERROR, DISABLED.</li>
<li><b>messages</b> - Array An array of LogSourceStatusMessage structures.</li>
<li><b>last_updated</b> - String - The time of the last status update (in milliseconds since
epoch).</li>
</ul> A 'status' message parameter contains the following fields: <ul>
<li><b>severity</b> - Enumeration - The severity of the status message. Possible values are INFO,
WARN, ERROR.</li>
<li><b>text</b> - The localized text of the status message.</li>
</ul></refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/log_sources/{id} resource details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/log_sources/{id} resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/log_sources/{id} request parameter details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/log_sources/{id} request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>id</p></entry>
<entry colname="col2"><p>path</p></entry>
<entry colname="col3"><p>Required</p></entry>
<entry colname="col4"><p>Number (Integer)</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>The ID of the log source to update.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>header</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/log_sources/{id} request body details</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/log_sources/{id} request body details</p></desc>
<tgroup cols="5">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="2*" />
<colspec colname="col5" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Data Type</entry>
<entry colname="col3">MIME Type</entry>
<entry colname="col4">Description</entry>
<entry colname="col5">Sample</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>log_source_data</p></entry>
<entry colname="col2"><p>Object</p></entry>
<entry colname="col3"><p>application/json</p></entry>
<entry colname="col4"><p>The updated log source data.  Any field not provided will be ignored.</p></entry>
<entry colname="col5"><p>{
    "coalesce_events": true,
    "credibility": 42,
    "deleted": true,
    "description": "String",
    "disconnected_log_collector_id": 42,
    "enabled": true,
    "gateway": true,
    "group_ids": [
        42
    ],
    "id": 42,
    "language_id": 42,
    "legacy_bulk_group_name": "String",
    "log_source_extension_id": 42,
    "name": "String",
    "parsing_order": 42,
    "protocol_parameters": [
        {
            "id": 42,
            "name": "String",
            "value": "String"
        }
    ],
    "protocol_type_id": 42,
    "requires_deploy": true,
    "sending_ip": "String",
    "store_event_payload": true,
    "target_event_collector_id": 42,
    "type_id": 42,
    "wincollect_external_destination_ids": [
        42
    ],
    "wincollect_internal_destination_id": 42
}</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /config/event_sources/log_source_management/log_sources/{id} response codes</title>
<desc><p outputclass="summary">POST /config/event_sources/log_source_management/log_sources/{id} response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>The log source was updated successfully.</p></entry>
</row>
<row>
<entry colname="col1"><p>403</p></entry>
<entry colname="col2"><p>1000</p></entry>
<entry colname="col3"><p>The endpoint cannot be used by users associated with a tenant.</p></entry>
</row>
<row>
<entry colname="col1"><p>404</p></entry>
<entry colname="col2"><p>1050</p></entry>
<entry colname="col3"><p>The requested log source cannot be found.</p></entry>
</row>
<row>
<entry colname="col1"><p>409</p></entry>
<entry colname="col2"><p>1001</p></entry>
<entry colname="col3"><p>The 'name' parameter must be unique.</p></entry>
</row>
<row>
<entry colname="col1"><p>409</p></entry>
<entry colname="col2"><p>1002</p></entry>
<entry colname="col3"><p>The combination of 'type_id','protocol_type_id' and 'identifier' (from 'protocol_parameters') must be unique.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1004</p></entry>
<entry colname="col3"><p>The 'name' parameter is required.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1005</p></entry>
<entry colname="col3"><p>The 'name' parameter must not exceed 255 characters.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1006</p></entry>
<entry colname="col3"><p>The 'description' parameter must not exceed 255 characters.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1007</p></entry>
<entry colname="col3"><p>The 'type_id' parameter does not match any of the available log source types.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1008</p></entry>
<entry colname="col3"><p>The 'type_id' parameter cannot correspond to an internal log source type.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1009</p></entry>
<entry colname="col3"><p>The 'protocol_type_id' parameter does not match any of the available protocol types.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1010</p></entry>
<entry colname="col3"><p>The combination of 'type_id' and 'protocol_type_id' is not supported.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1011</p></entry>
<entry colname="col3"><p>The requested log source cannot be updated because its type_id corresponds to an internal log source type.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1012</p></entry>
<entry colname="col3"><p>The protocol parameter is invalid.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1013</p></entry>
<entry colname="col3"><p>The protocol parameter id or name is invalid.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1014</p></entry>
<entry colname="col3"><p>The protocol parameter value format is incorrect.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1015</p></entry>
<entry colname="col3"><p>The protocol parameter is required but the value is missing.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1016</p></entry>
<entry colname="col3"><p>The protocol parameter value does not match one of the allowed values.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1017</p></entry>
<entry colname="col3"><p>The protocol parameter value is too short.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1018</p></entry>
<entry colname="col3"><p>The protocol parameter value is too long.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1019</p></entry>
<entry colname="col3"><p>The protocol parameter value is too big.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1020</p></entry>
<entry colname="col3"><p>The protocol parameter value is too small.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1021</p></entry>
<entry colname="col3"><p>The protocol parameter value does not match the allowed pattern.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1022</p></entry>
<entry colname="col3"><p>The protocol parameter is not a supported encoding.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1023</p></entry>
<entry colname="col3"><p>At least one protocol parameter from the group must be set.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1024</p></entry>
<entry colname="col3"><p>The 'credibility' parameter must be a value 0 - 10 inclusive.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1025</p></entry>
<entry colname="col3"><p>The 'target_event_collector_id' parameter does not match any of the available event collectors.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1026</p></entry>
<entry colname="col3"><p>The 'log_source_extension_id' parameter does not match any of the available log source extensions.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1027</p></entry>
<entry colname="col3"><p>The 'language_id' parameter does not match any of the available log source languages.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1028</p></entry>
<entry colname="col3"><p>The 'language_id' parameter does not match a supported language for the selected log source type.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1029</p></entry>
<entry colname="col3"><p>The 'group_ids' parameter contains one or more group IDs that cannot be found.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1030</p></entry>
<entry colname="col3"><p>The 'group_ids' parameter contains unassignable groups (IDs 0 or 1).</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1031</p></entry>
<entry colname="col3"><p>The 'wincollect_internal_destination_id' parameter does not match any available internal WinCollect destination.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1032</p></entry>
<entry colname="col3"><p>The 'wincollect_external_destination_ids' parameter contains one or more IDs that do not match an available external WinCollect destination.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1033</p></entry>
<entry colname="col3"><p>At least one internal or external WinCollect destination must be provided for log sources that are associated with a WinCollect agent.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1034</p></entry>
<entry colname="col3"><p>This method is not supported for this log source because it is part of a bulk group.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1035</p></entry>
<entry colname="col3"><p>This legacy_bulk_group_name field can only be set to null.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1036</p></entry>
<entry colname="col3"><p>A log source using this protocol cannot be used as a gateway.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1039</p></entry>
<entry colname="col3"><p>The 'sending_ip' parameter is not a valid IP address.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1040</p></entry>
<entry colname="col3"><p>The 'parsing_order' parameter must be a nonnegative integer.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1041</p></entry>
<entry colname="col3"><p>The requested 'parsing_order' is already in use by a log source with the same identifier.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1042</p></entry>
<entry colname="col3"><p>The 'disconnected_log_collector_id' parameter does not match any of the available collectors.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1043</p></entry>
<entry colname="col3"><p>The log source can have a value for 'target_event_collector_id' or 'disconnected_log_collector_id`, but not both.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>1044</p></entry>
<entry colname="col3"><p>A log source associated with a Disconnected Log Collector must have its 'identifier' end with the collector's UUID.</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1100</p></entry>
<entry colname="col3"><p>An error occurred during the attempt to create the log source.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>The updated log source identified by the id specified in the request.</p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
{
    "auto_discovered": true,
    "average_eps": 42,
    "coalesce_events": true,
    "creation_date": 42,
    "credibility": 42,
    "description": "String",
    "disconnected_log_collector_id": 42,
    "enabled": true,
    "gateway": true,
    "group_ids": [
        42
    ],
    "id": 42,
    "internal": true,
    "language_id": 42,
    "last_event_time": 42,
    "legacy_bulk_group_name": "String",
    "log_source_extension_id": 42,
    "modified_date": 42,
    "name": "String",
    "parsing_order": 42,
    "protocol_parameters": [
        {
            "id": 42,
            "name": "String",
            "value": "String"
        }
    ],
    "protocol_type_id": 42,
    "requires_deploy": true,
    "sending_ip": "String",
    "status": {
        "last_updated": 42,
        "messages": [
            {
                "severity": "String",
                "text": "String",
                "timestamp": 42
            }
        ],
        "status": "String"
    },
    "store_event_payload": true,
    "target_event_collector_id": 42,
    "type_id": 42,
    "wincollect_external_destination_ids": [
        42
    ],
    "wincollect_internal_destination_id": 42
}
</codeblock>
</refsyn>
</refbody>
</reference>