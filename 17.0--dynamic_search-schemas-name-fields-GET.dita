<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--dynamic_search-schemas-name-fields-GET" xml:lang="en-us">
<title>GET /dynamic_search/schemas/{name}/fields</title>
<shortdesc>Gets the list of all available Fields</shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/dynamic_search/schemas/{name}/fields</apiname>
<keyword>GET</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn>
<p>Gets the list of all available Fields</p>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /dynamic_search/schemas/{name}/fields resource details</title>
<desc><p outputclass="summary">GET /dynamic_search/schemas/{name}/fields resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /dynamic_search/schemas/{name}/fields request parameter details</title>
<desc><p outputclass="summary">GET /dynamic_search/schemas/{name}/fields request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>name</p></entry>
<entry colname="col2"><p>path</p></entry>
<entry colname="col3"><p>Required</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>null</p></entry>
</row>
<row>
<entry colname="col1"><p>Range</p></entry>
<entry colname="col2"><p>header</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to restrict the number of elements that are returned in the list to a specified range. The list is indexed starting at zero.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>query</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
<row>
<entry colname="col1"><p>filter</p></entry>
<entry colname="col2"><p>query</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - This parameter is used to restrict the elements in a list base on the contents of various fields.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /dynamic_search/schemas/{name}/fields response codes</title>
<desc><p outputclass="summary">GET /dynamic_search/schemas/{name}/fields response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>A list of Fields was retrieved.</p></entry>
</row>
<row>
<entry colname="col1"><p>404</p></entry>
<entry colname="col2"><p>1011</p></entry>
<entry colname="col3"><p>No schema with that name was found</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1010</p></entry>
<entry colname="col3"><p>null</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>The list of all available Fields.
 <ul>
 <li><b>localized_name</b> - String - The localized name for this simple field.</li>
 <li><b>data_type</b> - String - The dataType for this operator. One of (STRING, INTEGER, DOUBLE, BOOLEAN, IPADDRESS, CIDR, DATESTAMP. UUID).</li>
 <li><b>semantic_type</b> - String - The type that describes what kind of data this is. (e.g. HOSTNAME, MACADDRESS, SOURCE_IP)</li>
 <li><b>contextual_type</b> - String - The type that describes that specifically is in this field. (e.g. ASSET_HOSTNAME, OFFENSE_ATTACKER_IP)</li>
 <li><b>child</b> - Field structure - The argument for the supplied function.</li>
 <li><b>function</b> - Function structure - The function for the supplied argument.</li>
 </ul></p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
[
  {
    "argument_fields": [
      {
        "contextual_type": "String",
        "data_type": "String",
        "localized_name": "String",
        "semantic_type": "String"
      }
    ],
    "contextual_type": "String",
    "data_type": "String",
    "filter": {
      "argument": {
        "argument_fields": [
          {
            "contextual_type": "String",
            "data_type": "String",
            "localized_name": "String",
            "semantic_type": "String"
          }
        ],
        "contextual_type": "String",
        "data_type": "String",
        "filter": "Object",
        "function": {
          "aggregate": true,
          "argument_types": [
            {
              "position": 42,
              "type": "String"
            }
          ],
          "localized_name": "String",
          "name": "String",
          "return_data_type": "String"
        },
        "localized_name": "String",
        "semantic_type": "String"
      },
      "left_filter": {
        "argument": {
          "argument_fields": [
            {
              "contextual_type": "String",
              "data_type": "String",
              "localized_name": "String",
              "semantic_type": "String"
            }
          ],
          "contextual_type": "String",
          "data_type": "String",
          "filter": "Object",
          "function": {
            "aggregate": true,
            "argument_types": [
              {
                "position": 42,
                "type": "String"
              }
            ],
            "localized_name": "String",
            "name": "String",
            "return_data_type": "String"
          },
          "localized_name": "String",
          "semantic_type": "String"
        },
        "left_filter": {
          "argument": {
            "argument_fields": [
              {
                "contextual_type": "String",
                "data_type": "String",
                "localized_name": "String",
                "semantic_type": "String"
              }
            ],
            "contextual_type": "String",
            "data_type": "String",
            "filter": "Object",
            "function": {
              "aggregate": true,
              "argument_types": [
                {
                  "position": 42,
                  "type": "String"
                }
              ],
              "localized_name": "String",
              "name": "String",
              "return_data_type": "String"
            },
            "localized_name": "String",
            "semantic_type": "String"
          },
          "operator": {
            "connective": "String &lt;one of: AND, OR, NOT&gt;",
            "data_type": "String",
            "localized_name": "String",
            "name": "String"
          },
          "parameters": [
            "String"
          ]
        },
        "operator": {
          "connective": "String &lt;one of: AND, OR, NOT&gt;",
          "data_type": "String",
          "localized_name": "String",
          "name": "String"
        },
        "parameters": [
          "String"
        ],
        "right_filter": {
          "argument": {
            "argument_fields": [
              {
                "contextual_type": "String",
                "data_type": "String",
                "localized_name": "String",
                "semantic_type": "String"
              }
            ],
            "contextual_type": "String",
            "data_type": "String",
            "filter": "Object",
            "function": {
              "aggregate": true,
              "argument_types": [
                {
                  "position": 42,
                  "type": "String"
                }
              ],
              "localized_name": "String",
              "name": "String",
              "return_data_type": "String"
            },
            "localized_name": "String",
            "semantic_type": "String"
          },
          "operator": {
            "connective": "String &lt;one of: AND, OR, NOT&gt;",
            "data_type": "String",
            "localized_name": "String",
            "name": "String"
          },
          "parameters": [
            "String"
          ]
        }
      },
      "operator": {
        "connective": "String &lt;one of: AND, OR, NOT&gt;",
        "data_type": "String",
        "localized_name": "String",
        "name": "String"
      },
      "parameters": [
        "String"
      ],
      "right_filter": {
        "argument": {
          "argument_fields": [
            {
              "contextual_type": "String",
              "data_type": "String",
              "localized_name": "String",
              "semantic_type": "String"
            }
          ],
          "contextual_type": "String",
          "data_type": "String",
          "filter": "Object",
          "function": {
            "aggregate": true,
            "argument_types": [
              {
                "position": 42,
                "type": "String"
              }
            ],
            "localized_name": "String",
            "name": "String",
            "return_data_type": "String"
          },
          "localized_name": "String",
          "semantic_type": "String"
        },
        "left_filter": {
          "argument": {
            "argument_fields": [
              {
                "contextual_type": "String",
                "data_type": "String",
                "localized_name": "String",
                "semantic_type": "String"
              }
            ],
            "contextual_type": "String",
            "data_type": "String",
            "filter": "Object",
            "function": {
              "aggregate": true,
              "argument_types": [
                {
                  "position": 42,
                  "type": "String"
                }
              ],
              "localized_name": "String",
              "name": "String",
              "return_data_type": "String"
            },
            "localized_name": "String",
            "semantic_type": "String"
          },
          "operator": {
            "connective": "String &lt;one of: AND, OR, NOT&gt;",
            "data_type": "String",
            "localized_name": "String",
            "name": "String"
          },
          "parameters": [
            "String"
          ]
        },
        "operator": {
          "connective": "String &lt;one of: AND, OR, NOT&gt;",
          "data_type": "String",
          "localized_name": "String",
          "name": "String"
        },
        "parameters": [
          "String"
        ],
        "right_filter": {
          "argument": {
            "argument_fields": [
              {
                "contextual_type": "String",
                "data_type": "String",
                "localized_name": "String",
                "semantic_type": "String"
              }
            ],
            "contextual_type": "String",
            "data_type": "String",
            "filter": "Object",
            "function": {
              "aggregate": true,
              "argument_types": [
                {
                  "position": 42,
                  "type": "String"
                }
              ],
              "localized_name": "String",
              "name": "String",
              "return_data_type": "String"
            },
            "localized_name": "String",
            "semantic_type": "String"
          },
          "operator": {
            "connective": "String &lt;one of: AND, OR, NOT&gt;",
            "data_type": "String",
            "localized_name": "String",
            "name": "String"
          },
          "parameters": [
            "String"
          ]
        }
      }
    },
    "function": {
      "aggregate": true,
      "argument_types": [
        {
          "position": 42,
          "type": "String"
        }
      ],
      "localized_name": "String",
      "name": "String",
      "return_data_type": "String"
    },
    "localized_name": "String",
    "semantic_type": "String"
  }
]
</codeblock>
</refsyn>
</refbody>
</reference>