<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--qni-stacking-stacks-stack_id-POST" xml:lang="en-us">
<title>POST /qni/stacking/stacks/{stack_id}</title>
<shortdesc>Updates a QNI stack, as specified by the stack ID.</shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/qni/stacking/stacks/{stack_id}</apiname>
<keyword>POST</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn>
<p>Updates a QNI stack, as specified by the stack ID.</p>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /qni/stacking/stacks/{stack_id} resource details</title>
<desc><p outputclass="summary">POST /qni/stacking/stacks/{stack_id} resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /qni/stacking/stacks/{stack_id} request parameter details</title>
<desc><p outputclass="summary">POST /qni/stacking/stacks/{stack_id} request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>stack_id</p></entry>
<entry colname="col2"><p>path</p></entry>
<entry colname="col3"><p>Required</p></entry>
<entry colname="col4"><p>Number (Integer)</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Required - The ID of the QNI stack to update.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>header</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /qni/stacking/stacks/{stack_id} request body details</title>
<desc><p outputclass="summary">POST /qni/stacking/stacks/{stack_id} request body details</p></desc>
<tgroup cols="5">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="2*" />
<colspec colname="col5" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Data Type</entry>
<entry colname="col3">MIME Type</entry>
<entry colname="col4">Description</entry>
<entry colname="col5">Sample</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>stack</p></entry>
<entry colname="col2"><p>Object</p></entry>
<entry colname="col3"><p>application/json</p></entry>
<entry colname="col4"><p>null</p></entry>
<entry colname="col5"><p>{
    "hosts": [
        {
            "host_id": 42,
            "host_ip": "String",
            "primary": true
        }
    ],
    "inspection_level": "String &lt;one of: BASIC, ADVANCED, ENRICHED, DEFAULT&gt;",
    "name": "String",
    "ports_type": "String &lt;one of: IN_4, IN_2_OUT_2, IN_1_OUT_1, IN_1_OUT_3, IN_3_OUT_1&gt;",
    "raw_payload": 42,
    "stack_id": 42
}</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>POST /qni/stacking/stacks/{stack_id} response codes</title>
<desc><p outputclass="summary">POST /qni/stacking/stacks/{stack_id} response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>The QNI stack has been updated.</p></entry>
</row>
<row>
<entry colname="col1"><p>404</p></entry>
<entry colname="col2"><p>1002</p></entry>
<entry colname="col3"><p>The stack ID is not found.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>44131</p></entry>
<entry colname="col3"><p>The inspection level is invalid.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>44132</p></entry>
<entry colname="col3"><p>The raw payload value is invalid.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830131</p></entry>
<entry colname="col3"><p>The host is not available for stacking.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830134</p></entry>
<entry colname="col3"><p>The stack must include a minimum of 1 host.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830135</p></entry>
<entry colname="col3"><p>The stack exceeds the maximum number of hosts.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830136</p></entry>
<entry colname="col3"><p>The host IP address does not match the host ID.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830137</p></entry>
<entry colname="col3"><p>Two or more hosts in the stack have the same IP address.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830138</p></entry>
<entry colname="col3"><p>One host must be declared as the primary host.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830139</p></entry>
<entry colname="col3"><p>The stack can have only 1 host defined as the primary.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830132</p></entry>
<entry colname="col3"><p>The stack name must begin with a letter.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830140</p></entry>
<entry colname="col3"><p>Specify the stack name.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830141</p></entry>
<entry colname="col3"><p>The stack name already exists. The stack name must be unique.</p></entry>
</row>
<row>
<entry colname="col1"><p>422</p></entry>
<entry colname="col2"><p>3830133</p></entry>
<entry colname="col3"><p>The port type is invalid.</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1020</p></entry>
<entry colname="col3"><p>An error occurred attempting to update QNI stack.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>A QNI stack. The QNI stack contains the following fields:
         <ul> 
         <li><b>stack_id</b> - Long - The ID of the QNI stack.</li>
         <li><b>hosts</b> - List&lt;Host&gt; - The list of the QNI managed hosts in the stack.</li>
         <li><b>name</b> - String - The name of the QNI stack.</li>
         <li><b>ports_type</b> - enum - Port configuration type for the QNI stack. The possible
values are:<ul>
<li>IN_4</li>
<li>IN_2_OUT_2</li>
<li>IN_1_OUT_1</li>
<li>IN_1_OUT_3</li>
<li>IN_3_OUT_1</li>
</ul></li>
         <li><b>inspection_level</b> - <i>Optional</i> - Enumeration - The depth of content
inspection. The possible values are:<ul>
<li><i>BASIC</i> - Lowest level of inspection. Flows are detected by 5-tuple, and the number of
bytes and packets that are flowing in each direction are counted.</li>
<li><i>ENRICHED</i> - Each flow is identified and inspected by one of the protocol or domain
inspectors. The inspection can generate many kinds of attributes.</li>
<li><i>ADVANCED</i> - The highest level of inspection. It does everything that the Enriched level
does, but it also scans and inspects the content of the files that it finds.</li>
<li><i>DEFAULT</i> - Indicates that the QNI host is configured to use the globally-set inspection
level.</li>
</ul></li>
         <li><b>raw_payload</b> - <i>Optional</i> - Long - The maximum amount of data (Bytes) that
the QFlow Collector captures and retains in the flow payload. The possible values are:<ul>
<li>-1: The QNI host is set to use the globally-set raw payload setting</li>
<li>0: Turn off the payload</li>
<li>1 - 32768: Number of bytes</li>
</ul></li>
         </ul></p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
{
    "hosts": [
        {
            "host_id": 42,
            "host_ip": "String",
            "primary": true
        }
    ],
    "inspection_level": "String &lt;one of: BASIC, ADVANCED, ENRICHED, DEFAULT&gt;",
    "name": "String",
    "ports_type": "String &lt;one of: IN_4, IN_2_OUT_2, IN_1_OUT_1, IN_1_OUT_3, IN_3_OUT_1&gt;",
    "raw_payload": 42,
    "stack_id": 42
}
</codeblock>
</refsyn>
</refbody>
</reference>