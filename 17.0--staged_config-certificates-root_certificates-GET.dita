<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "dtd/ibm-reference.dtd">
<reference id="api-17.0--staged_config-certificates-root_certificates-GET" xml:lang="en-us">
<title>GET /staged_config/certificates/root_certificates</title>
<shortdesc>Gets the list of all of the root certificates that are uploaded. You must have System
Administrator or Security Administrator permissions to use this endpoint.</shortdesc>
<prolog>
<metadata>
<keywords>
<apiname>/staged_config/certificates/root_certificates</apiname>
<keyword>GET</keyword>
<keyword>API</keyword>
<keyword>REST API</keyword>
</keywords>
</metadata>
</prolog>
<refbody>
<refsyn/>
<refsyn>
<table pgwide="0">
<title>GET /staged_config/certificates/root_certificates resource details</title>
<desc><p outputclass="summary">GET /staged_config/certificates/root_certificates resource details</p></desc>
<tgroup cols="1">
<colspec colname="col1" colwidth="1*" />
<thead>
<row valign="bottom">
<entry colname="col1">MIME Type</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>application/json
</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /staged_config/certificates/root_certificates request parameter details</title>
<desc><p outputclass="summary">GET /staged_config/certificates/root_certificates request parameter details</p></desc>
<tgroup cols="6">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="1*" />
<colspec colname="col4" colwidth="1*" />
<colspec colname="col5" colwidth="1*" />
<colspec colname="col6" colwidth="2*" />
<thead>
<row valign="bottom">
<entry colname="col1">Parameter</entry>
<entry colname="col2">Type</entry>
<entry colname="col3">Optionality</entry>
<entry colname="col4">Data Type</entry>
<entry colname="col5">MIME Type</entry>
<entry colname="col6">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>Range</p></entry>
<entry colname="col2"><p>header</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to restrict the number of elements that are returned in the list to a specified range. The list is indexed starting at zero.</p></entry>
</row>
<row>
<entry colname="col1"><p>filter</p></entry>
<entry colname="col2"><p>query</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - This parameter is used to restrict the elements in a list base on the contents of various fields.</p></entry>
</row>
<row>
<entry colname="col1"><p>fields</p></entry>
<entry colname="col2"><p>query</p></entry>
<entry colname="col3"><p>Optional</p></entry>
<entry colname="col4"><p>String</p></entry>
<entry colname="col5"><p>text/plain</p></entry>
<entry colname="col6"><p>Optional - Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<table pgwide="0">
<title>GET /staged_config/certificates/root_certificates response codes</title>
<desc><p outputclass="summary">GET /staged_config/certificates/root_certificates response codes</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="1*" />
<colspec colname="col2" colwidth="1*" />
<colspec colname="col3" colwidth="3*" />
<thead>
<row valign="bottom">
<entry colname="col1">HTTP Response Code</entry>
<entry colname="col2">Unique Code</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p>200</p></entry>
<entry colname="col2"><p/></entry>
<entry colname="col3"><p>An array of the certificate resources.</p></entry>
</row>
<row>
<entry colname="col1"><p>500</p></entry>
<entry colname="col2"><p>1020</p></entry>
<entry colname="col3"><p>Not able to return certificate collection</p></entry>
</row>
</tbody>
</tgroup>
</table>
</refsyn>
<refsyn>
<title>Response Description</title>
<p>An array of the root certificate resources that are uploaded. A Certificate object has the following format:
  	<ul>
      <li><b>id</b> - Uniquely identifies the certificate. This value is derived from <i>subject_key_id</i>.</li>
      <li><b>subject_key_id</b> - Returns the Subject Key Identifier of the CA certificate.</li>
      <li><b>authority_key_id</b> - Returns the Authority Key Identifier of the CA certificate.</li>
      <li><b>subject</b> - Returns the Subject of the CA certificate.	</li>
      <li><b>issuer</b> - Returns the Issuer of the CA certificate.</li>
      <li><b>not_before</b> - Returns the "Validity Not Before" value of the certificate, represented as the number of milliseconds since UNIX Epoch.</li>
      <li><b>expiry</b> - Returns the "Validity Not After" value of the certificate, represented as the number of milliseconds since UNIX Epoch.</li>
      <li><b>serial_number</b> - Returns the "Serial Number" field of the certificate.</li>
 	 	<li><b>key_usage</b> - Returns the "Key Usage" field of the certificate. The values are one or more of the enum X509Certificate.KeyUsage
 		 <ul>
 	 	    <li>CRL_SIGN</li>
 	 	    <li>DATA_ENCIPHERMENT</li>
 		     <li>DECIPHER_ONLY</li>
 	 	    <li>DIGITAL_SIGNATURE</li>
 	 	    <li>ENCIPHER_ONLY</li>
 		     <li>KEY_AGREEMENT</li>
 		     <li>KEY_CERT_SIGN</li>
 	 	    <li>KEY_ENCIPHERMENT</li>
 	 	    <li>NON_REPUDIATION</li>
 	 	 </ul>
 	 </li>
	<li><b>status</b> - Returns the status of the certificate. After you upload the certificate, one of the following values is shown:
		<ul>
		<li> DEPLOY_PENDING indicates that the changes must be deployed.</li>
		<li> DEPLOYED indicates that the certificate was uploaded and the changes were deployed.</li>
		<li> DELETE_PENDING indicates that the certificate was deployed, but will be deleted pending the next deployment.</li>
	        </ul></li>
	<li><b>validation</b> - Returns the code to indicate if the certificate is valid or if not the reason the certificate is not valid.
                <ul>
                <li>-1 - Certificate has not been validated.</li>
                <li>0 - Certificate is valid or has not been checked. </li>
                <li>2001 - Error parsing a certificate.</li>
                <li>2002 - Error decoding a certificate.</li>
                <li>2003 - The certificate is expired.</li>
                <li>2004 - The certificate is not yet valid.</li>
                <li>2005 - The certificate is revoked.</li>
                <li>2010 - An unexpected error occurred when processing a certificate.</li>
                <li>2011 - Error finding the issuer certificates.</li>
                <li>2012 - The certificate's key usage or extended key usage does not match its purpose.</li>
                <li>2013 - Error validating the full chain of the certificate.</li>
                <li>2014 - The certificate is an invalid self-signed certificate.</li>
                <li>2020 - The CRL is invalid.</li>
                <li>2030 - Unexpected error when processing the CRL.</li>
                <li>2031 - Error finding the issuer certificates for the CRL.</li>
                <li>2032 - The issuer does not have the <i>CRL sign</i> usage.</li>
                <li>2033 - Error validating the CRL.</li>
                <li>2034 - The CRL is expired.</li>
	          </ul></li>
            </ul></p>
</refsyn>
<refsyn>
<title>Response Sample</title>
<codeblock>
[
    {
        "authorityKeyId": "String",
        "expiry": 42,
        "id": "String",
        "issuer": [
            {
                "field_name": "String",
                "value": "String"
            }
        ],
        "key_usage": [
            "String &lt;one of: CRL_SIGN, DATA_ENCIPHERMENT, DECIPHER_ONLY, DIGITAL_SIGNATURE, ENCIPHER_ONLY, KEY_AGREEMENT, KEY_CERT_SIGN, KEY_ENCIPHERMENT, NON_REPUDIATION&gt;"
        ],
        "not_before": 42,
        "serial_number": "String",
        "status": "String",
        "subject": [
            {
                "field_name": "String",
                "value": "String"
            }
        ],
        "subjectKeyId": "String",
        "validation": 42
    }
]
</codeblock>
</refsyn>
</refbody>
</reference>